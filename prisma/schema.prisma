
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Daycare {
  id        String   @id @default(cuid())
  name      String
  status    DaycareStatus @default(PENDING)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  users    User[]
  children Child[]
  staff    Staff[]
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  daycareId String
  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Child {
  id            String   @id @default(cuid())
  name          String
  dateOfBirth   DateTime
  startDate     DateTime
  program       String
  programType   String
  status        String   @default("Active") // e.g., Active, Inactive, Waitlisted
  photoUrl      String?
  photoHint     String?

  motherName    String
  fatherName    String
  homePhone     String?
  mobilePhone   String
  address       String

  emergencyName   String
  emergencyPhone  String

  vaccination   String?
  allergies     String?
  notes         String?

  daycareId String
  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Staff {
  id             String   @id @default(cuid())
  name           String
  photoUrl       String?
  photoHint      String?
  role           String
  status         String   @default("Active") // e.g., Active, On Leave, Inactive
  startDate      DateTime
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String

  certifications String?
  notes          String?
  
  payType        String // e.g., Monthly Salary, Hourly Rate
  payRate        Float

  daycareId String
  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
