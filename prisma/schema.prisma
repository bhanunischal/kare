
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Daycare {
  id        String   @id @default(cuid())
  name      String
  status    DaycareStatus
  plan      String
  address   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  children  Child[]
  staff     Staff[]
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  daycareId     String
  daycare       Daycare   @relation(fields: [daycareId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Child {
  id              String      @id @default(cuid())
  name            String
  dateOfBirth     DateTime
  gender          String?
  startDate       DateTime
  status          ChildStatus
  program         String
  programType     String
  motherName      String
  motherEmail     String?
  fatherName      String
  fatherEmail     String?
  mobilePhone     String
  address         String
  emergencyName   String
  emergencyPhone  String
  vaccination     String?
  allergies       String?
  notes           String?
  photoUrl        String?
  photoHint       String?
  daycareId       String
  daycare         Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Staff {
  id             String   @id @default(cuid())
  name           String
  role           String
  startDate      DateTime
  status         String
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  certifications String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  daycareId      String
  daycare        Daycare  @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum ChildStatus {
  Active
  Inactive
  Waitlisted
}
