// prisma/schema.prisma
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

model SaaSAdmin {
  id    String  @id @default(cuid())
  email String  @unique
  name  String?
}

model Daycare {
  id            String  @id @default(cuid())
  name          String
  licenseNumber String?
  address       String?
  phone         String?
  email         String? @unique
  logoUrl       String?
  bannerUrl     String?
  status        String  @default("Pending") // "Active", "Inactive", "Pending", "Archived"
  plan          String  @default("Basic") // "Basic", "Premium", "Enterprise"

  // Capacities
  infantCapacity        Int @default(0)
  toddlerCapacity       Int @default(0)
  preschoolCapacity     Int @default(0)
  gradeschoolerCapacity Int @default(0)

  children Child[]
  staff    Staff[]
  invoices Invoice[]
  expenses Expense[]
}

model Child {
  id          String   @id @default(cuid())
  name        String
  dob         DateTime
  photoUrl    String?
  status      String   @default("Active") // "Active", "Waitlisted", "Inactive"
  program     String // "Infant (0-12months)", "Toddler (1 to 3 years)", etc.
  programType String // "Full time", "Part time", "Ad-hoc daily basis"
  startDate   DateTime

  // Parent/Guardian Info
  motherName  String?
  fatherName  String?
  mobilePhone String
  address     String

  // Emergency Contact
  emergencyName  String
  emergencyPhone String

  // Health Info
  vaccination String?
  allergies   String?
  notes       String?

  daycare   Daycare @relation(fields: [daycareId], references: [id])
  daycareId String
}

model Staff {
  id             String   @id @default(cuid())
  name           String
  role           String // "Lead ECE", "Assistant", "ECE-IT", "Support Staff"
  photoUrl       String?
  certifications String?
  status         String   @default("Active") // "Active", "On Leave", "Inactive"
  startDate      DateTime
  phone          String
  address        String

  emergencyName  String
  emergencyPhone String

  payType String // "Monthly Salary", "Hourly Rate"
  payRate Float

  notes String?

  daycare   Daycare @relation(fields: [daycareId], references: [id])
  daycareId String
}

model Invoice {
  id        String   @id @default(cuid())
  childName String
  parent    String
  amount    Float
  dueDate   DateTime
  status    String // "Paid", "Due", "Overdue"
  program   String

  daycare   Daycare @relation(fields: [daycareId], references: [id])
  daycareId String
}

model Expense {
  id          String   @id @default(cuid())
  date        DateTime
  category    String // "Supplies", "Utilities", "Rent", "Salaries", etc.
  description String
  amount      Float
  vendor      String?

  daycare   Daycare @relation(fields: [daycareId], references: [id])
  daycareId String
}
