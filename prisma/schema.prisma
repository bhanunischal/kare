// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Daycare {
  id                      String   @id @default(cuid())
  name                    String
  status                  DaycareStatus @default(PENDING)
  plan                    String
  address                 String?
  contactEmail            String?
  contactPhone            String?
  licenseNumber           String?
  infantCapacity          Int      @default(0)
  toddlerCapacity         Int      @default(0)
  preschoolCapacity       Int      @default(0)
  gradeschoolerCapacity   Int      @default(0)
  createdAt               DateTime @default(now())
  updatedAt               DateTime @updatedAt
  users                   User[]
  children                Child[]
  staff                   Staff[]
  activities              Activity[]
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

model User {
  id              String    @id @default(cuid())
  email           String    @unique
  name            String
  password        String
  emailVerified   DateTime?
  daycareId       String
  daycare         Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model VerificationToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, token])
}

model PasswordResetToken {
  id        String   @id @default(cuid())
  email     String
  token     String   @unique
  expires   DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([email, token])
}

model Child {
  id               String      @id @default(cuid())
  name             String
  dateOfBirth      DateTime
  gender           String?
  photoUrl         String?
  photoHint        String?
  startDate        DateTime
  program          String
  programType      String
  status           ChildStatus @default(Active)
  motherName       String
  motherEmail      String?
  fatherName       String
  fatherEmail      String?
  mobilePhone      String
  address          String
  emergencyName    String
  emergencyPhone   String
  vaccination      String?
  allergies        String?
  notes            String?
  daycareId        String
  daycare          Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

enum ChildStatus {
  Active
  Waitlisted
  Inactive
}

model Staff {
  id               String   @id @default(cuid())
  name             String
  photoUrl         String?
  photoHint        String?
  role             String
  status           String   @default("Active")
  startDate        DateTime
  phone            String
  address          String
  emergencyName    String
  emergencyPhone   String
  payType          String
  payRate          Float
  certifications   String?
  notes            String?
  daycareId        String
  daycare          Daycare  @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
}

model Activity {
    id            String    @id @default(cuid())
    title         String
    date          DateTime
    time          String
    category      String
    description   String?
    materials     String?
    domains       String[]
    daycareId     String
    daycare       Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
    createdAt     DateTime  @default(now())
    updatedAt     DateTime  @updatedAt
}
