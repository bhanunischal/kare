
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Daycare {
  id        String   @id @default(cuid())
  name      String
  plan      String   // e.g., Basic, Premium
  address   String?
  status    DaycareStatus @default(PENDING)
  users     User[]
  children  Child[]
  staff     Staff[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  emailVerified DateTime?
  daycare       Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId     String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Child {
  id                       String      @id @default(cuid())
  name                     String
  dateOfBirth              DateTime
  gender                   String?
  startDate                DateTime
  status                   ChildStatus
  program                  String
  programType              String
  motherName               String
  motherEmail              String?
  fatherName               String
  fatherEmail              String?
  mobilePhone              String
  address                  String
  emergencyName            String
  emergencyPhone           String
  vaccination              String?
  allergies                String?
  notes                    String?
  photoUrl                 String?
  photoHint                String?
  daycare                  Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId                String
  createdAt                DateTime    @default(now())
  updatedAt                DateTime    @updatedAt
}

enum ChildStatus {
  Active
  Inactive
  Waitlisted
}

model Staff {
  id             String       @id @default(cuid())
  name           String
  role           String
  startDate      DateTime
  status         StaffStatus
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  certifications String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  daycare        Daycare      @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId      String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum StaffStatus {
  Active
  Inactive
  Archived
}
