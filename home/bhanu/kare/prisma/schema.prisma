// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Daycare {
  id        String        @id @default(cuid())
  name      String
  status    DaycareStatus @default(PENDING)
  plan      String
  address   String?
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt

  users    User[]
  children Child[]
  staff    Staff[]
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId String
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Child {
  id          String      @id @default(cuid())
  name        String
  dateOfBirth DateTime
  gender      String?
  status      ChildStatus @default(Active)
  program     String
  programType String
  startDate   DateTime

  photoUrl  String?
  photoHint String?

  // Parent Info
  motherName     String
  motherEmail    String?
  fatherName     String
  fatherEmail    String?
  mobilePhone    String
  address        String

  // Emergency Contact
  emergencyName  String
  emergencyPhone String

  // Health Info
  vaccination String?
  allergies   String?
  notes       String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId String
}

enum ChildStatus {
  Active
  Inactive
  Waitlisted
}

model Staff {
  id     String @id @default(cuid())
  name   String
  role   String
  status String @default("Active") // Can be Active, Inactive, Archived
  startDate      DateTime
  
  photoUrl       String?
  photoHint      String?

  phone   String
  address String

  // Emergency Contact
  emergencyName  String
  emergencyPhone String

  // Compensation
  payType String // Hourly, Salary
  payRate Float

  // Other
  certifications String?
  notes          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  daycare   Daycare @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  daycareId String
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}
