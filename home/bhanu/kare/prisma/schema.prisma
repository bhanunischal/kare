// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Full-text search is not supported on this provider.
// model Post {
//   id        String   @id @default(cuid())
//   title     String
//   content   String?
//   published Boolean  @default(false)
//   author    User?    @relation(fields: [authorId], references: [id])
//   authorId  String?
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }

model Daycare {
  id        String        @id @default(cuid())
  name      String
  plan      String
  address   String?
  status    DaycareStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  users     User[]
  children  Child[]
  staff     Staff[]
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

model User {
  id              String    @id @default(cuid())
  name            String
  email           String    @unique
  password        String
  emailVerified   DateTime?
  daycare         Daycare   @relation(fields: [daycareId], references: [id])
  daycareId       String
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

model Child {
  id             String      @id @default(cuid())
  name           String
  dateOfBirth    DateTime
  gender         String?
  startDate      DateTime
  program        String
  programType    String
  status         ChildStatus @default(Active)
  photoUrl       String?
  photoHint      String?
  motherName     String
  motherEmail    String?
  fatherName     String
  fatherEmail    String?
  mobilePhone    String
  address        String
  emergencyName  String
  emergencyPhone String
  vaccination    String?
  allergies      String?
  notes          String?
  daycare        Daycare     @relation(fields: [daycareId], references: [id])
  daycareId      String
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

enum ChildStatus {
  Active
  Waitlisted
  Inactive
}

model Staff {
  id             String   @id @default(cuid())
  name           String
  role           String
  startDate      DateTime
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  certifications String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  status         String   @default("Active") // e.g., Active, Inactive, Archived
  daycare        Daycare  @relation(fields: [daycareId], references: [id])
  daycareId      String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
