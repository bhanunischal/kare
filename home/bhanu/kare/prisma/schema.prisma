// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Daycare {
  id        String   @id @default(cuid())
  name      String
  plan      String
  address   String?
  status    DaycareStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]
  children  Child[]
  staff     Staff[]
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  daycareId     String
  daycare       Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Child {
  id               String      @id @default(cuid())
  name             String
  dateOfBirth      DateTime
  gender           String?
  startDate        DateTime
  program          String
  programType      String
  status           ChildStatus
  photoUrl         String?
  photoHint        String?
  motherName       String
  motherEmail      String?
  fatherName       String
  fatherEmail      String?
  mobilePhone      String
  address          String
  emergencyName    String
  emergencyPhone   String
  vaccination      String?
  allergies        String?
  notes            String?
  daycareId        String
  daycare          Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt        DateTime    @default(now())
  updatedAt        DateTime    @updatedAt
}

model Staff {
  id             String      @id @default(cuid())
  name           String
  role           String
  startDate      DateTime
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  certifications String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  status         StaffStatus
  daycareId      String
  daycare        Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum ChildStatus {
  Active
  Inactive
  Waitlisted
}

enum StaffStatus {
  Active
  Inactive
  Archived
}
