// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Daycare {
  id          String   @id @default(cuid())
  name        String
  plan        String
  status      DaycareStatus @default(PENDING)
  address     String?
  licenseNumber String?
  contactEmail String?
  contactPhone String?
  infantCapacity Int @default(0)
  toddlerCapacity Int @default(0)
  preschoolCapacity Int @default(0)
  gradeschoolerCapacity Int @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  users       User[]
  children    Child[]
  staff       Staff[]
  activities  Activity[]
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  password      String
  emailVerified DateTime?
  daycareId     String
  daycare       Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

model Child {
  id             String      @id @default(cuid())
  name           String
  dateOfBirth    DateTime
  startDate      DateTime
  program        String
  programType    String
  status         ChildStatus
  gender         String?
  motherName     String
  motherEmail    String?
  fatherName     String
  fatherEmail    String?
  mobilePhone    String
  address        String
  emergencyName  String
  emergencyPhone String
  vaccination    String?
  allergies      String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  daycareId      String
  daycare        Daycare     @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
}

enum ChildStatus {
  Active
  Waitlisted
  Inactive
}

model Staff {
  id             String   @id @default(cuid())
  name           String
  role           String
  startDate      DateTime
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  status         String
  certifications String?
  notes          String?
  photoUrl       String?
  photoHint      String?
  daycareId      String
  daycare        Daycare  @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

model Activity {
  id          String    @id @default(cuid())
  date        DateTime
  time        String
  title       String
  category    String
  description String?
  materials   String?
  domains     String[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  daycareId   String
  daycare     Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
}
