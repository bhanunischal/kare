
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Daycare {
  id        String         @id @default(cuid())
  name      String
  status    DaycareStatus  @default(PENDING)
  plan      String         @default("Basic")
  location  String?
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  users     User[]
  children  Child[]
  staff     Staff[]
}

model User {
  id            String    @id @default(cuid())
  name          String
  email         String    @unique
  emailVerified DateTime?
  password      String
  image         String?
  role          UserRole  @default(OWNER)
  daycareId     String
  daycare       Daycare   @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model Child {
  id              String       @id @default(cuid())
  name            String
  photoUrl        String?
  photoHint       String?
  dateOfBirth     DateTime
  startDate       DateTime
  status          ChildStatus
  program         String
  programType     String
  motherName      String
  fatherName      String
  mobilePhone     String
  address         String
  emergencyName   String
  emergencyPhone  String
  vaccination     String?
  allergies       String?
  notes           String?
  daycareId       String
  daycare         Daycare      @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
}

model Staff {
  id             String       @id @default(cuid())
  name           String
  photoUrl       String?
  photoHint      String?
  role           String
  status         StaffStatus
  startDate      DateTime
  phone          String
  address        String
  emergencyName  String
  emergencyPhone String
  payType        String
  payRate        Float
  certifications String?
  notes          String?
  daycareId      String
  daycare        Daycare      @relation(fields: [daycareId], references: [id], onDelete: Cascade)
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

model VerificationToken {
  id      String   @id @default(cuid())
  email   String
  token   String   @unique
  expires DateTime

  @@unique([email, token])
}

enum DaycareStatus {
  PENDING
  ACTIVE
  INACTIVE
  ARCHIVED
}

enum UserRole {
  OWNER
  ADMIN
  STAFF
}

enum ChildStatus {
  Active
  Inactive
  Waitlisted
  Graduated
}

enum StaffStatus {
  Active
  Inactive
  On_Leave
}
